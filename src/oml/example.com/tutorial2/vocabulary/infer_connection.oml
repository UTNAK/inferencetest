vocabulary <http://example.com/tutorial2/vocabulary/infer_connection#> as infer_connection {

	extends <http://www.w3.org/2000/01/rdf-schema#> as rdfs

	extends <http://imce.jpl.nasa.gov/foundation/base#> as base

	extends <http://imce.jpl.nasa.gov/foundation/mission#> as mission

// original kepler-16b model uses "Junction" as a relation entity. 
// IMCE Vocabularies have a "Junction" as a Concept.
//	@rdfs:comment "A Junction joins two or more Interfaces."
//	relation entity Junction [
//		from mission:Interface
//		to mission:Interface
//		forward joins
//		symmetric
//		irreflexive
//	] < base:IdentifiedElement

	@rdfs:comment "A Component connects to zero or more components."
	relation entity Connection [
		from mission:Component
		to mission:Component
		forward connectsTo
		symmetric
	]

	@rdfs:comment "When interfaces presented by components are joined, we infer that the components are connected."
	rule Junction-infers-Connection [
		mission:presents(c1, i1) & 
		mission:joins1(j1, i1) & 
		mission:joins2(j1, i2) & 
		mission:isPresentedBy(i2, c2) -> connectsTo(c1, c2)
	]

	concept ElectricSource < mission:Component
//	concept ElectricComponent < mission:Component[
//		restricts mission:presents to exactly 1 mission:Interface
//		restricts all connectsTo to ElectricSource
//	]

	concept ElectricalInterface < mission:Interface

	concept ElectricComponent < [
		restricts some connectsTo to ElectricSource
	] = mission:Component[
		restricts some mission:presents to ElectricalInterface
	] 
	

}